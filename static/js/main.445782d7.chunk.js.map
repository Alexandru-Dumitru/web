{"version":3,"sources":["components/navbar/navbar.component.jsx","pages/home/home.page.jsx","pages/projects/projects.page.jsx","pages/CV/CV.page.jsx","components/footer/footer.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","useState","click","setClick","closeMobileMenu","className","to","onClick","target","rel","Home","Projects","CV","Footer","aria-label","App","basename","process","path","exact","component","window","location","href","replace","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qRAoEeA,G,MAhEA,WAAO,IAAD,EACOC,oBAAS,GADhB,mBACZC,EADY,KACLC,EADK,KAIbC,EAAkB,kBAAMD,GAAS,IAEvC,OACE,oCACE,yBAAKE,UAAU,UACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAcE,QAASH,GAC5C,uBAAGC,UAAU,uBADf,gBAIA,yBAAKA,UAAU,YAAYE,QAXf,kBAAMJ,GAAUD,KAY1B,uBAAGG,UAAWH,EAAQ,eAAiB,iBAEzC,wBAAIG,UAAWH,EAAQ,kBAAoB,YACzC,wBAAIG,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAYE,QAASH,GAA5C,SAIF,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,YACHD,UAAU,YACVE,QAASH,GAHX,aAQF,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,MAAMD,UAAU,YAAYE,QAASH,GAA9C,OAIF,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,YACHD,UAAU,YACVE,QAASH,GAHX,aAQF,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,QACHD,UAAU,YACVG,OAAO,SACPC,IAAI,sBACJF,QAASH,GALX,eCxCCM,EANF,kBACT,sCCKWC,EANE,kBACb,sCCKWC,EANJ,kBACP,sCCkCWC,G,MApCA,kBACf,yBAAKR,UAAU,oBACT,6BAASA,UAAU,gBACjB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eACrB,uBAAGA,UAAU,uBADf,iBAKF,2BAAOA,UAAU,kBAAjB,0BACA,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CACEA,UAAU,mBACVC,GAAG,YACHE,OAAO,SACPC,IAAI,sBACJK,aAAW,YAEX,uBAAGT,UAAU,qBAEf,kBAAC,IAAD,CACEA,UAAU,mBACVC,GAAG,UACHE,OAAO,SACPC,IAAI,sBACJK,aAAW,UAEX,uBAAGT,UAAU,yBCCZU,MAzBf,WACE,OACE,oCACE,kBAAC,IAAD,CAAeC,SAAUC,QACxB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWV,IACjC,kBAAC,IAAD,CAAOQ,KAAK,YAAYC,OAAK,EAACC,UAAWT,IACzC,kBAAC,IAAD,CAAOO,KAAK,MAAMC,OAAK,EAACC,UAAWR,IACnC,kBAAC,IAAD,CAAOM,KAAK,QAAQE,UAAW,WAEnC,OADAC,OAAOC,SAASC,KAAM,oCACf,QACH,kBAAC,IAAD,CAAOL,KAAK,UAAUE,UAAW,WAErC,OADAC,OAAOC,SAASE,QAAQ,mCACjB,QACH,kBAAC,IAAD,CAAON,KAAK,YAAYE,UAAW,WAEvC,OADAC,OAAOC,SAASE,QAAQ,sDACjB,SAEL,kBAAC,EAAD,SCfaC,QACW,cAA7BJ,OAAOC,SAASI,UAEe,UAA7BL,OAAOC,SAASI,UAEhBL,OAAOC,SAASI,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.445782d7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './navbar.styles.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  const [click, setClick] = useState(false);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-container\">\r\n          <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n            <i className=\"fas fa-laptop-code\" />\r\n            Alex Dumitru\r\n          </Link>\r\n          <div className=\"menu-icon\" onClick={handleClick}>\r\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                to=\"/projects\"\r\n                className=\"nav-links\"\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Projects\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/cv\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                CV\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                to=\"/calendar\"\r\n                className=\"nav-links\"\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Calendar\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                to=\"/blog\"\r\n                className=\"nav-links\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Blog\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n// import MainSection from '../components/mainSection/MainSection';\r\n// import Cards from '../components/Cards/Cards';\r\nimport '../../App.css';\r\n\r\nconst Home = () => (\r\n    <>\r\n        {/* <MainSection /> */}\r\n    </>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n// import MainSection from '../components/mainSection/MainSection';\r\n// import Cards from '../components/Cards/Cards';\r\nimport '../../App.css';\r\n\r\nconst Projects = () => (\r\n    <>\r\n        {/* <MainSection /> */}\r\n    </>\r\n);\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\n// import MainSection from '../components/mainSection/MainSection';\r\n// import Cards from '../components/Cards/Cards';\r\nimport '../../App.css';\r\n\r\nconst CV = () => (\r\n    <>\r\n        {/* <MainSection /> */}\r\n    </>\r\n);\r\n\r\nexport default CV;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './footer.styles.scss';\r\n\r\nconst Footer = () => (\r\n<div className=\"footer-container\">\r\n      <section className='social-media'>\r\n        <div className='social-media-wrap'>\r\n          <div className='footer-logo'>\r\n            <Link to='/' className='social-logo'>\r\n              <i className=\"fas fa-laptop-code\"/>\r\n              Alex Dumitru\r\n            </Link>\r\n          </div>\r\n          <small className='website-rights'>Alex Dumitru Â© 2020</small>\r\n          <div className='social-icons'>\r\n            <Link\r\n              className='social-icon-link'\r\n              to='/LinkedIn'\r\n              target='_blank'\r\n              rel=\"noopener noreferrer\"\r\n              aria-label='LinkedIn'\r\n            >\r\n              <i className='fab fa-linkedin' />\r\n            </Link>\r\n            <Link\r\n              className='social-icon-link'\r\n              to='/GitHub'\r\n              target='_blank'\r\n              rel=\"noopener noreferrer\"\r\n              aria-label='GitHub'\r\n            >\r\n              <i className='fab fa-github' />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div> \r\n)\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/navbar/navbar.component';\nimport Home from './pages/home/home.page'\nimport Projects from './pages/projects/projects.page'\nimport CV from './pages/CV/CV.page'\nimport Footer from './components/footer/footer.component';\nfunction App() {\n  return (\n    <>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n       <Navbar />\n       <Switch>\n         <Route path='/' exact component={Home} />\n         <Route path='/projects' exact component={Projects} />\n         <Route path='/cv' exact component={CV} />\n         <Route path='/blog' component={() => { \n     window.location.href ='https://medium.com/@dumitru.alex0';\n     return null; }} />\n         <Route path='/GitHub' component={() => { \n     window.location.replace('https://github.com/dumitru-alex'); \n     return null; }} />\n         <Route path='/LinkedIn' component={() => { \n     window.location.replace('https://www.linkedin.com/in/alexandru-paul-dumitru'); \n     return null; }} />\n       </Switch>\n       <Footer />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}